mvi	R0, #1
mv	R1, R0
mvi	R6, #Beta
mvi	R2, #0
Loop:
mv R5, R6
mvi R4, #8192 % H7_address
ld R3, R5
st R3, R4
add R5, R1
add R4, R1
ld	R3, R5
st	R3, R4
add	R5, R1
add	R4, R1
ld	R3, R5
st	R3, R4
add	R5, R1
add	R4, R1
ld	R3, R5
st	R3, R4
add	R5, R1
add	R4, R1
ld	R3, R5
st	R3, R4
add	R5, R1
add	R4, R1
ld	R3, R5
st	R3, R4
add	R5, R1
add	R4, R1
ld	R3, R5
st	R3, R4
add	R5, R1
add	R4, R1
ld	R3, R5
st	R3, R4
sub	R6, R0
mvi	R5, #Alpha-1
mvi	R4, #Skip
sub	R5, R6		% Q == Alpha-1?
mvnz R7, R4		% No %
add	R6, R1 %
add	R6, R1		% Q <- Alpha+1 %
mvi	R5, #65535 %
sub	R5, R0 %
add	R5, R1 %
mv	R0, R5		%K <- -K %
Skip:
mvi	R5, #Beta+1	%Save reg %
mvi	R4, #Cont
sub	R5, R6
mvnz R7, R4
sub	R6, R1
sub	R6, R1
mvi	R5, #65535
sub	R5, R0
add	R5, R1
mv	R0, R5
Cont:
mvi	R5, #Temp
st	R0, R5
mvi	R3, #4096 %	LED reg address %
st	R2, R3	%
add	R2, R1	%
mvi	R3, #16383	%	Delay %
mv	R5, R7
Outer:
mvi	R0, #12288 % Read switch valuation %
ld	R4, R0
mv	R0, R7
Inner:
sub	R4, R1
mvnz R7, R0
sub	R3, R1
mvnz R7, R5
mvi	R5, #Temp
ld	R0, R5 %
mvi	R7, #Loop %
Alpha-1:
.word #0
Alpha:
.word #65535
.word #65535
.word #65535
.word #65535
.word #65535
Beta:
.word #66
Beta+1:
.word #48
.word #18
.word #65535
.word #65535
.word #65535
.word #65535
.word #65535
Temp:
.word #0
.word #0